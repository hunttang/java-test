import com.github.jengelman.gradle.plugins.shadow.transformers.*

buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.4.5'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.16'
    }
}

/*
// Alternative for buildscript + apply plugin
plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.google.protobuf' version '0.8.16'
}
*/

wrapper {
    gradleVersion = '7.0'
}

allprojects {
    repositories {
        mavenCentral()
    }

    defaultTasks 'clean', 'shadowJar'

    apply plugin: 'idea'
    apply plugin: 'java'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    group 'com.sensetime.test'
    version '1.0'

    dependencies {
        testImplementation 'junit:junit:4.12'

        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'commons-io:commons-io:2.8.0'
        implementation 'commons-validator:commons-validator:1.6'
        implementation 'com.google.code.gson:gson:2.8.6'
        implementation 'joda-time:joda-time:2.10.10'
        implementation 'com.typesafe:config:1.3.1'
        implementation 'org.projectlombok:lombok:1.16.18'
    }
}

subprojects {
    dependencies {
        implementation 'io.grpc:grpc-protobuf:1.37.0'
        implementation 'io.grpc:grpc-stub:1.37.0'
        implementation 'org.apache.httpcomponents:httpasyncclient:4.1.4'
        implementation 'org.apache.httpcomponents:httpclient:4.5.13'
        implementation 'org.apache.httpcomponents:httpmime:4.5.13'
        implementation 'ch.qos.logback:logback-classic:1.2.3'

        compileOnly 'org.apache.tomcat:annotations-api:6.0.53'

        if (project != project(':common')) {
            implementation project(':common')
        }
    }
}

project(':common') {
    defaultTasks 'clean', 'generateProto'

    apply plugin: 'com.google.protobuf'

    protobuf {
        protoc {
            artifact = 'com.google.protobuf:protoc:3.12.0'
        }
        generatedFilesBaseDir = "$projectDir/src/generated"
        clean {
            delete generatedFilesBaseDir
        }
        plugins {
            grpc {
                artifact = 'io.grpc:protoc-gen-grpc-java:1.37.0'
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {}
            }
        }
    }

    /*
    idea {
        module {
            sourceDirs += file("src/generated/main/java")
            sourceDirs += file("src/generated/main/grpc")
            generatedSourceDirs += file("src/generated/main/java")
            generatedSourceDirs += file("src/generated/main/grpc")
        }
    }
    */
}

project(':java-test') {
    allprojects {
        group 'com.sensetime.test.java.test'
    }

    subprojects {
        apply plugin: 'application'
        apply plugin: 'com.github.johnrengelman.shadow'

        shadowJar {
            zip64 true

            if (project.file('logback.xml').exists()) {
                exclude project(':common').file('logback.xml').path
            }
        }
    }

    project(':java-test:app') {
        mainClassName = 'com.sensetime.test.java.test.app.Main'

        dependencies {
            implementation 'org.apache.hadoop:hadoop-client:2.7.1'
            implementation 'org.apache.hbase:hbase-client:1.1.2'
            implementation 'net.lingala.zip4j:zip4j:1.3.2'
            implementation 'org.apache.poi:poi-ooxml:3.16'
            implementation 'org.jsoup:jsoup:1.10.2'
            implementation 'org.eclipse.jgit:org.eclipse.jgit:5.0.2.201807311906-r'
        }
    }

    project(':java-test:drill') {
        mainClassName = 'com.sensetime.test.java.test.drill.Main'

        dependencies {
            implementation 'org.apache.drill.exec:drill-jdbc-all:1.4.0'
            implementation 'org.apache.hbase:hbase-common:1.1.2'
        }
    }

    project(':java-test:hbase') {
        mainClassName = 'com.sensetime.test.java.test.hbase.Main'

        dependencies {
            implementation 'org.apache.hbase:hbase-common:1.1.5'
            implementation 'org.apache.hbase:hbase-client:1.1.5'
        }
    }

    project(':java-test:jna') {
        mainClassName = 'com.sensetime.test.java.test.jna.Main'

        dependencies {
            implementation 'net.java.dev.jna:jna:4.4.0'
        }
    }

    project(':java-test:mapreduce') {
        mainClassName = 'com.sensetime.test.java.test.mapreduce.TestRunner'

        dependencies {
            implementation 'org.apache.hadoop:hadoop-client:2.7.1'
            implementation 'org.apache.hadoop:hadoop-mapreduce-client-shuffle:2.7.1'
        }
    }

    project(':java-test:spark') {
        mainClassName = 'com.sensetime.test.java.test.spark.Main'

        dependencies {
            implementation 'org.apache.hadoop:hadoop-client:2.7.1'
            implementation 'org.apache.spark:spark-core_2.10:1.5.1'
            implementation 'org.apache.spark:spark-streaming_2.10:1.5.1'
            implementation 'org.apache.spark:spark-streaming-kafka_2.10:1.5.1'
            implementation 'org.apache.spark:spark-sql_2.10:1.5.1'
        }
    }

    project(':java-test:light4j') {
        mainClassName = 'com.networknt.server.Server'

        shadowJar {
            exclude 'config/audit.yml'
            exclude 'config/body.yml'
            exclude 'config/client.yml'
            exclude 'config/exception.yml'
            exclude 'config/info.yml'
            exclude 'config/jwt.yml'
            exclude 'config/secret.yml'
            exclude 'config/security.yml'
            exclude 'config/server.yml'
            exclude 'config/status.yml'
            exclude 'logback-test.xml'
        }

        dependencies {
            implementation 'com.networknt:config:1.5.8'
            implementation 'com.networknt:utility:1.5.8'
            implementation 'com.networknt:status:1.5.8'
            implementation 'com.networknt:server:1.5.8'
            implementation 'com.networknt:body:1.5.8'
            implementation 'com.networknt:handler:1.5.8'
        }
    }

    project(':java-test:spring') {
        mainClassName = 'com.sensetime.test.java.test.spring.Main'

        apply plugin: 'org.springframework.boot'
        apply plugin: 'io.spring.dependency-management'
        apply plugin: 'com.google.protobuf'

        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-web:2.4.5'
            implementation 'io.grpc:grpc-netty-shaded:1.37.0'
            implementation 'io.grpc:grpc-protobuf:1.37.0'
            implementation 'io.grpc:grpc-stub:1.37.0'
            implementation 'com.google.protobuf:protobuf-java-util:3.12.0'

            compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
        }

        shadowJar {
            // Required for Spring
            mergeServiceFiles()
            append 'META-INF/spring.handlers'
            append 'META-INF/spring.schemas'
            append 'META-INF/spring.tooling'
            transform(PropertiesFileTransformer) {
                paths = ['META-INF/spring.factories']
                mergeStrategy = "append"
            }
        }

        protobuf {
            protoc {
                artifact = 'com.google.protobuf:protoc:3.12.0'
            }
            plugins {
                grpc {
                    artifact = 'io.grpc:protoc-gen-grpc-java:1.37.0'
                }
            }
            generateProtoTasks {
                all()*.plugins {
                    grpc {}
                }
            }
        }
    }

    project(':java-test:spring-grpc') {
        mainClassName = 'com.sensetime.test.java.test.springgrpc.Main'

        apply plugin: 'org.springframework.boot'
        apply plugin: 'io.spring.dependency-management'
        apply plugin: 'com.google.protobuf'

        dependencies {
            implementation 'io.grpc:grpc-netty-shaded:1.37.0'
            implementation 'io.grpc:grpc-protobuf:1.37.0'
            implementation 'io.grpc:grpc-stub:1.37.0'
            implementation 'com.google.protobuf:protobuf-java-util:3.12.0'
            implementation 'net.devh:grpc-server-spring-boot-starter:2.12.0.RELEASE'

            compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
        }

        shadowJar {
            // Required for Spring
            mergeServiceFiles()
            append 'META-INF/spring.handlers'
            append 'META-INF/spring.schemas'
            append 'META-INF/spring.tooling'
            transform(PropertiesFileTransformer) {
                paths = ['META-INF/spring.factories']
                mergeStrategy = "append"
            }
        }

        protobuf {
            protoc {
                artifact = 'com.google.protobuf:protoc:3.12.0'
            }
            plugins {
                grpc {
                    artifact = 'io.grpc:protoc-gen-grpc-java:1.37.0'
                }
            }
            generateProtoTasks {
                all()*.plugins {
                    grpc {}
                }
            }
        }
    }
}

project(':scala-test') {
    allprojects {
        apply plugin: 'scala'

        group 'com.test.scalatest'

        dependencies {
            zinc 'com.typesafe.zinc:zinc:0.3.13'
            implementation 'org.scala-lang:scala-library:2.12.1'
            implementation 'org.scala-lang:scala-compiler:2.12.1'
            implementation 'org.scala-lang:scala-reflect:2.12.1'
        }

        configurations.all {
            resolutionStrategy {
                force 'com.google.guava:guava:14.0.1'
            }
        }
    }

    subprojects {
        apply plugin: 'application'
        apply plugin: 'com.github.johnrengelman.shadow'

        shadowJar {
            zip64 true
        }
    }

    project(':scala-test:app') {
        mainClassName = 'com.sensetime.test.scala.test.app.Main'

        dependencies {
            implementation 'org.apache.hadoop:hadoop-client:2.7.1'
            implementation 'org.apache.hbase:hbase-client:1.1.2'
            implementation 'org.apache.spark:spark-core_2.11:2.2.0'
            implementation 'net.lingala.zip4j:zip4j:1.3.2'
        }
    }
}
